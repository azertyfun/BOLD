#define MAX_DRIVE_COUNT 6

:start
	;First, we copy the loader at 0xE000.
	set A, loader
	set B, loader_end
	set C, 0xE000
	jsr memcpy

	jsr detectPeriphs ;Detecting peripherals

	set A, 0
	set B, 0x8000
	hwi [monitor] ;Mapping monitor

	set [selected], 0xFFFF

	set B, prompt
	set I, 0x8000
	jsr write

	ife [n_drives], 0
		set PC, mainLoop

	set I, 0

	:readDiskHeaders
		;Reading first sector at 0x9000
		set A, 2
		set X, 0
		set Y, 0x9000

		hwi [drives + I]
		ifn B, 1
			ifn B, 2
				set PC, readDiskHeaders_skip

		jsr loadFloppy_waitFinish

		;Checking if disk is BBOS-compatible
		set B, str_bootableFloppy
		ifn [Y + 0x1FF], 0x55AA
			set B, str_noBootableFloppy
		set [ptr_names + I], B

		ifn [Y + 0x1FF], 0x55AA
			set PC, readDiskHeaders_skip

		set [drives_compatible + I], 1
		set [drives_startSectors + I], [Y + 0x1FD]
		set [drives_nSectors + I], [Y + 0x1FE]

		:readDiskHeaders_skip
		add I, 1
		ifn I, [n_drives]
			set PC, readDiskHeaders

:mainLoop
	;Printing programs with one highlighted

	add [selected], 1
	set I, 0
	:mainLoop_loop
		ife [drives_compatible + I], 1
			set [selected], I
		ife [drives_compatible + I], 1
			set PC, loadFloppy

		add I, 1
		set PC, mainLoop_loop

:handleKey
	set Z, 0
	ifn C, 0x72 ;KEY_R
		ifn C, 0x66 ;KEY_F
			ifn C, 0x11 ;KEY_RETURN
				set PC, POP

	ife C, 0x72 ;KEY_R
		set PC, handleKey_up
	ife C, 0x11 ;RETURN
		set PC, handleKey_return

	;If not R or return, must be F, don't need to test.

	:handleKey_down
		add [selected], 1
		ife [selected], MAX_DRIVE_COUNT
			set [selected], 0
		set PC, POP

	:handleKey_up
		sub [selected], 1
		ife [selected], -1
			set [selected], MAX_DRIVE_COUNT
		ife [selected], MAX_DRIVE_COUNT
			sub [selected], 1
		set PC, POP ;Back to main loop

	:handleKey_return
		set Z, 1 ;We want to launch then ^^
		set PC, POP

:prompt DAT "Press R/F to select OS"
:selected DAT 0

:bootableFloppy DAT 0
:str_bootableFloppy DAT "BBOS-Compatible disk", 0
:str_noBootableFloppy DAT "No bootable floppy detected", 0

:ptr_names DAT str_noBootableFloppy, str_noBootableFloppy, str_noBootableFloppy, str_noBootableFloppy, str_noBootableFloppy, str_noBootableFloppy ;Comment after name_2 if you only want 2 OS, or name_3 if you want 3.
